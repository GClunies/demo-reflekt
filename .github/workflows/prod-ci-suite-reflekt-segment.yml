name: Prod CI Suite - Reflekt <-> Segment
on:
  pull_request:
    branches:
      - main

jobs:
  test-and-sync-2-qa:
    name: Test proposed tracking plan changes
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest']
        python-version: ['3.9']
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python: ${{ matrix.python-version }}

      - name: Install Reflekt
        run: |
          pip install reflekt

      - name: CI Setup - make reflekt_config.yml for CI suite
        run: |
          mkdir /home/runner/.reflekt
          echo "${{ secrets.CI_REFLEKT_CONFIG_YML }}" > /home/runner/.reflekt/reflekt_config.yml

      - name: CI Setup - set config_path in reflekt_project.yml
        uses: jacobtomlinson/gha-find-replace@2.0.0
        with:
          find: "# config_path: /absolute/path/to/reflekt_config.yml"
          replace: "config_path: /home/runner/.reflekt/reflekt_config.yml"
          include: "reflekt_project.yml"  # Only search this file

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v26.1
        # with:
        #   # Output unique changed directories instead of filenames.
        #   # NOTE: Returns . for changed files located in the root of project.
        #   dir_names: true

      - name: List modified directories (for debugging)
        run: |
          for dir_name in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$dir_name was modified"
          done

      # - name: Test my-segment-plan (if modified)
      #   if: contains(steps.changed-files.outputs.all_changed_files, 'tracking-plans/my-segment-plan')
      #   run: |
      #     reflekt test --name my-segment-plan

      # reflekt push runs reflekt test in the background, so no need to run test separately
      # - name: Sync my-segment-plan to QA (if passed test)
      #   if: contains(steps.changed-files.outputs.all_changed_files, 'tracking-plans/my-segment-plan')
      #   run: |
      #     reflekt push --name my-segment-plan --target my-segment-plan-qa  # TODO - add --target arg to reflekt push
